user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # When adding a subdomain, add the following server block before running certbot
    # When running certbot, user the --expand flag to add to the domain list
    # The reverse proxy can be setup after the subdomain is registered
    #
    #server {
    #    listen 80;
    #    server_name ${subdomain}.${env.DOMAIN};
    #}

    server {
        server_name snipeit.${env.DOMAIN};
    
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/${env.DOMAIN}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/${env.DOMAIN}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        #add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
        add_header X-XSS-Protection: "1; mode=block";

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass              http://snipeit:80;
        }
    }

    server {
        server_name nextcloud.${env.DOMAIN};

        client_max_body_size 200M;
    
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/${env.DOMAIN}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/${env.DOMAIN}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        #add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
        add_header X-XSS-Protection: "1; mode=block";

#        location = /login {
#            return 301 https://nextcloud.${env.DOMAIN}/apps/sociallogin/custom_oidc/Keycloak;
#        }

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        Referer $http_referer;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass              http://nextcloud:80;
        }
    
    }

    server {
        server_name auth.${env.DOMAIN};
    
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/${env.DOMAIN}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/${env.DOMAIN}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src http://auth.${env.DOMAIN};";
        #add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
        add_header X-XSS-Protection: "1; mode=block";

        location /auth/admin {
            return 404;
        }

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        Referer $http_referer;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass              http://keycloak:8080;
        }
    
    
    }

    server {
        server_name wiki.${env.DOMAIN};

        client_max_body_size 500M;
    
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/${env.DOMAIN}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/${env.DOMAIN}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        #add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
        add_header X-XSS-Protection: "1; mode=block";

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        Referer $http_referer;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass              http://wikijs:3000;
        }
    
    
    }

    server {
        server_name vaultwarden.${env.DOMAIN};

        client_max_body_size 500M;

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/${env.DOMAIN}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/${env.DOMAIN}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        #add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
        add_header X-XSS-Protection: "1; mode=block";

        location /admin {
            return 404;
        }

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        Referer $http_referer;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass              http://vaultwarden:80;
        }


    }

    server {
        server_name ${env.DOMAIN};
    
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/${env.DOMAIN}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/${env.DOMAIN}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        return 301 https://wiki.$host;
    
    
    }

    server {
        if ($host = ${env.DOMAIN}) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80;
        server_name ${env.DOMAIN};
        return 404; # managed by Certbot
    }

    server {
        if ($host = auth.${env.DOMAIN}) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80;
        server_name auth.${env.DOMAIN};
        return 404; # managed by Certbot
    }

    server {
        if ($host = wiki.${env.DOMAIN}) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80;
        server_name wiki.${env.DOMAIN};
        return 404; # managed by Certbot
    }


    server {
        if ($host = nextcloud.${env.DOMAIN}) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80;
        server_name nextcloud.${env.DOMAIN};
        return 404; # managed by Certbot
    }


    server {
        if ($host = snipeit.${env.DOMAIN}) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80;
        server_name snipeit.${env.DOMAIN};
        return 404; # managed by Certbot
    }
}
